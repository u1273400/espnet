++ train_set=train_nodev
++ train_dev=train_dev
++ lm_test=test
++ recog_set='train_dev test'
++ '[' -1 -le -1 ']'
++ '[' 100 -ge -1 ']'
++ echo 'stage -1: Data Download'
stage -1: Data Download
++ mkdir -p ./downloads
++ local/download_and_untar.sh ./downloads http://www.speech.cs.cmu.edu/databases/an4/
./downloads http://www.speech.cs.cmu.edu/databases/an4/
/home/john/src/python/espnet/egs/an4/asr1
local/download_and_untar.sh: an4 directory already exists in ./downloads
skipping..++ train_set=train_nodev
++ train_dev=train_dev
++ lm_test=test
++ recog_set='train_dev test'
++ '[' 3 -le -1 ']'
++ '[' 3 -le 0 ']'
++ feat_tr_dir=dump/train_nodev/deltafalse
++ mkdir -p dump/train_nodev/deltafalse
++ feat_dt_dir=dump/train_dev/deltafalse
++ mkdir -p dump/train_dev/deltafalse
++ '[' 3 -le 1 ']'
++ dict=data/lang_1char/train_nodev_units.txt
++ echo 'dictionary: data/lang_1char/train_nodev_units.txt'
dictionary: data/lang_1char/train_nodev_units.txt
++ '[' 3 -le 2 ']'
++ '[' -z ']'
+++ basename conf/lm
++ lmtag=lm
++ '[' true = true ']'
++ lmtag=lm_word100
++ lmexpname=train_rnnlm_pytorch_lm_word100
++ lmexpdir=exp/train_rnnlm_pytorch_lm_word100
++ mkdir -p exp/train_rnnlm_pytorch_lm_word100
++ '[' 3 -le 3 ']'
++ '[' 4 -ge 3 ']'
++ echo 'stage 3: LM Preparation'
stage 3: LM Preparation
++ '[' true = true ']'
++ lmdatadir=data/local/wordlm_train
++ lmdict=data/local/wordlm_train/wordlist_100.txt
++ mkdir -p data/local/wordlm_train
++ cut -f 2- '-d ' data/train_nodev/text
++ cut -f 2- '-d ' data/train_dev/text
++ cut -f 2- '-d ' data/test/text
++ text2vocabulary.py -s 100 -o data/local/wordlm_train/wordlist_100.txt data/local/wordlm_train/train.txt
WARNING:root:OOV rate = 0.00 %
++ run.pl --gpu 2 exp/train_rnnlm_pytorch_lm_word100/train.log lm_train.py --config conf/lm.yaml --ngpu 2 --backend pytorch --verbose 1 --outdir exp/train_rnnlm_pytorch_lm_word100 --tensorboard-dir tensorboard/train_rnnlm_pytorch_lm_word100 --train-label data/local/wordlm_train/train.txt --valid-label data/local/wordlm_train/valid.txt --test-label data/local/wordlm_train/test.txt --resume --dict data/local/wordlm_train/wordlist_100.txt
run.pl: job failed, log is in exp/train_rnnlm_pytorch_lm_word100/train.log
++ train_set=train_nodev
++ train_dev=train_dev
++ lm_test=test
++ recog_set='train_dev test'
++ '[' 4 -le -1 ']'
++ '[' 4 -le 0 ']'
++ feat_tr_dir=dump/train_nodev/deltafalse
++ mkdir -p dump/train_nodev/deltafalse
++ feat_dt_dir=dump/train_dev/deltafalse
++ mkdir -p dump/train_dev/deltafalse
++ '[' 4 -le 1 ']'
++ dict=data/lang_1char/train_nodev_units.txt
++ echo 'dictionary: data/lang_1char/train_nodev_units.txt'
dictionary: data/lang_1char/train_nodev_units.txt
++ '[' 4 -le 2 ']'
++ '[' -z ']'
+++ basename conf/lm
++ lmtag=lm
++ '[' true = true ']'
++ lmtag=lm_word100
++ lmexpname=train_rnnlm_pytorch_lm_word100
++ lmexpdir=exp/train_rnnlm_pytorch_lm_word100
++ mkdir -p exp/train_rnnlm_pytorch_lm_word100
++ '[' 4 -le 3 ']'
++ '[' -z ']'
+++ basename conf/train_mtlalpha1.0
++ expname=train_nodev_pytorch_train_mtlalpha1.0
++ false
++ expdir=exp/train_nodev_pytorch_train_mtlalpha1.0
++ mkdir -p exp/train_nodev_pytorch_train_mtlalpha1.0
++ '[' 4 -le 4 ']'
++ '[' 5 -ge 4 ']'
++ echo 'stage 4: Network Training'
stage 4: Network Training
++ run.pl --gpu 2 exp/train_nodev_pytorch_train_mtlalpha1.0/train.log asr_train.py --config conf/train_mtlalpha1.0.yaml --ngpu 2 --backend pytorch --outdir exp/train_nodev_pytorch_train_mtlalpha1.0/results --tensorboard-dir tensorboard/train_nodev_pytorch_train_mtlalpha1.0 --debugmode 1 --dict data/lang_1char/train_nodev_units.txt --debugdir exp/train_nodev_pytorch_train_mtlalpha1.0 --minibatches 0 --verbose 1 --resume --train-json dump/train_nodev/deltafalse/data.json --valid-json dump/train_dev/deltafalse/data.json
run.pl: job failed, log is in exp/train_nodev_pytorch_train_mtlalpha1.0/train.log
++ train_set=train_nodev
++ train_dev=train_dev
++ lm_test=test
++ recog_set='train_dev test'
++ '[' 4 -le -1 ']'
++ '[' 4 -le 0 ']'
++ feat_tr_dir=dump/train_nodev/deltafalse
++ mkdir -p dump/train_nodev/deltafalse
++ feat_dt_dir=dump/train_dev/deltafalse
++ mkdir -p dump/train_dev/deltafalse
++ '[' 4 -le 1 ']'
++ dict=data/lang_1char/train_nodev_units.txt
++ echo 'dictionary: data/lang_1char/train_nodev_units.txt'
dictionary: data/lang_1char/train_nodev_units.txt
++ '[' 4 -le 2 ']'
++ '[' -z ']'
+++ basename conf/lm
++ lmtag=lm
++ '[' true = true ']'
++ lmtag=lm_word100
++ lmexpname=train_rnnlm_pytorch_lm_word100
++ lmexpdir=exp/train_rnnlm_pytorch_lm_word100
++ mkdir -p exp/train_rnnlm_pytorch_lm_word100
++ '[' 4 -le 3 ']'
++ '[' -z ']'
+++ basename conf/train_mtlalpha1.0
++ expname=train_nodev_pytorch_train_mtlalpha1.0
++ false
++ expdir=exp/train_nodev_pytorch_train_mtlalpha1.0
++ mkdir -p exp/train_nodev_pytorch_train_mtlalpha1.0
++ '[' 4 -le 4 ']'
++ '[' 5 -ge 4 ']'
++ echo 'stage 4: Network Training'
stage 4: Network Training
++ run.pl --gpu 2 exp/train_nodev_pytorch_train_mtlalpha1.0/train.log asr_train.py --config conf/train_mtlalpha1.0.yaml --ngpu 2 --backend pytorch --outdir exp/train_nodev_pytorch_train_mtlalpha1.0/results --tensorboard-dir tensorboard/train_nodev_pytorch_train_mtlalpha1.0 --debugmode 1 --dict data/lang_1char/train_nodev_units.txt --debugdir exp/train_nodev_pytorch_train_mtlalpha1.0 --minibatches 0 --verbose 1 --resume --train-json dump/train_nodev/deltafalse/data.json --valid-json dump/train_dev/deltafalse/data.json
run.pl: job failed, log is in exp/train_nodev_pytorch_train_mtlalpha1.0/train.log
++ train_set=train_nodev
++ train_dev=train_dev
++ lm_test=test
++ recog_set='train_dev test'
++ '[' 4 -le -1 ']'
++ '[' 4 -le 0 ']'
++ feat_tr_dir=dump/train_nodev/deltafalse
++ mkdir -p dump/train_nodev/deltafalse
++ feat_dt_dir=dump/train_dev/deltafalse
++ mkdir -p dump/train_dev/deltafalse
++ '[' 4 -le 1 ']'
++ dict=data/lang_1char/train_nodev_units.txt
++ echo 'dictionary: data/lang_1char/train_nodev_units.txt'
dictionary: data/lang_1char/train_nodev_units.txt
++ '[' 4 -le 2 ']'
++ '[' -z ']'
+++ basename conf/lm
++ lmtag=lm
++ '[' true = true ']'
++ lmtag=lm_word100
++ lmexpname=train_rnnlm_pytorch_lm_word100
++ lmexpdir=exp/train_rnnlm_pytorch_lm_word100
++ mkdir -p exp/train_rnnlm_pytorch_lm_word100
++ '[' 4 -le 3 ']'
++ '[' -z ']'
+++ basename conf/train_mtlalpha1.0
++ expname=train_nodev_pytorch_train_mtlalpha1.0
++ false
++ expdir=exp/train_nodev_pytorch_train_mtlalpha1.0
++ mkdir -p exp/train_nodev_pytorch_train_mtlalpha1.0
++ '[' 4 -le 4 ']'
++ '[' 5 -ge 4 ']'
++ echo 'stage 4: Network Training'
stage 4: Network Training
++ run.pl --gpu 1 exp/train_nodev_pytorch_train_mtlalpha1.0/train.log asr_train.py --config conf/train_mtlalpha1.0.yaml --ngpu 1 --backend pytorch --outdir exp/train_nodev_pytorch_train_mtlalpha1.0/results --tensorboard-dir tensorboard/train_nodev_pytorch_train_mtlalpha1.0 --debugmode 1 --dict data/lang_1char/train_nodev_units.txt --debugdir exp/train_nodev_pytorch_train_mtlalpha1.0 --minibatches 0 --verbose 1 --resume --train-json dump/train_nodev/deltafalse/data.json --valid-json dump/train_dev/deltafalse/data.json
++ '[' 4 -le 5 ']'
++ '[' 5 -ge 5 ']'
++ echo 'stage 5: Decoding'
stage 5: Decoding
++ nj=8
++ pids=()
++ for rtask in '${recog_set}'
++ pids+=($!)
++ for rtask in '${recog_set}'
++ pids+=($!)
++ i=0
++ for pid in '"${pids[@]}"'
++ wait 13714
+++ basename conf/decode_ctcweight1.0
+++ basename conf/decode_ctcweight1.0
++ decode_dir=decode_test_decode_ctcweight1.0_lm_word100
++ decode_dir=decode_train_dev_decode_ctcweight1.0_lm_word100
++ '[' true = true ']'
++ '[' true = true ']'
++ recog_opts='--word-rnnlm exp/train_rnnlm_pytorch_lm_word100/rnnlm.model.best'
++ feat_recog_dir=dump/test/deltafalse
++ recog_opts='--word-rnnlm exp/train_rnnlm_pytorch_lm_word100/rnnlm.model.best'
++ feat_recog_dir=dump/train_dev/deltafalse
++ splitjson.py --parts 8 dump/test/deltafalse/data.json
++ splitjson.py --parts 8 dump/train_dev/deltafalse/data.json
2020-06-29 09:29:49,180 (splitjson:43) INFO: /home/john/anaconda3/bin/python3 /home/john/src/python/espnet/egs/an4/asr1/../../../utils/splitjson.py --parts 8 dump/test/deltafalse/data.json
2020-06-29 09:29:49,180 (splitjson:43) INFO: /home/john/anaconda3/bin/python3 /home/john/src/python/espnet/egs/an4/asr1/../../../utils/splitjson.py --parts 8 dump/train_dev/deltafalse/data.json
2020-06-29 09:29:49,208 (splitjson:55) INFO: number of utterances = 100
2020-06-29 09:29:49,236 (splitjson:55) INFO: number of utterances = 130
++ ngpu=0
++ run.pl JOB=1:8 exp/train_nodev_pytorch_train_mtlalpha1.0/decode_train_dev_decode_ctcweight1.0_lm_word100/log/decode.JOB.log asr_recog.py --config conf/decode_ctcweight1.0.yaml --ngpu 0 --backend pytorch --debugmode 1 --verbose 1 --recog-json dump/train_dev/deltafalse/split8utt/data.JOB.json --result-label exp/train_nodev_pytorch_train_mtlalpha1.0/decode_train_dev_decode_ctcweight1.0_lm_word100/data.JOB.json --model exp/train_nodev_pytorch_train_mtlalpha1.0/results/model.loss.best --word-rnnlm exp/train_rnnlm_pytorch_lm_word100/rnnlm.model.best
++ ngpu=0
++ run.pl JOB=1:8 exp/train_nodev_pytorch_train_mtlalpha1.0/decode_test_decode_ctcweight1.0_lm_word100/log/decode.JOB.log asr_recog.py --config conf/decode_ctcweight1.0.yaml --ngpu 0 --backend pytorch --debugmode 1 --verbose 1 --recog-json dump/test/deltafalse/split8utt/data.JOB.json --result-label exp/train_nodev_pytorch_train_mtlalpha1.0/decode_test_decode_ctcweight1.0_lm_word100/data.JOB.json --model exp/train_nodev_pytorch_train_mtlalpha1.0/results/model.loss.best --word-rnnlm exp/train_rnnlm_pytorch_lm_word100/rnnlm.model.best
run.pl: 8 / 8 failed, log is in exp/train_nodev_pytorch_train_mtlalpha1.0/decode_test_decode_ctcweight1.0_lm_word100/log/decode.*.log
run.pl: 8 / 8 failed, log is in exp/train_nodev_pytorch_train_mtlalpha1.0/decode_train_dev_decode_ctcweight1.0_lm_word100/log/decode.*.log
++ (( ++i ))
++ for pid in '"${pids[@]}"'
++ wait 13715
++ (( ++i ))
++ '[' 2 -gt 0 ']'
++ echo 'bash: 2 background jobs are failed.'
bash: 2 background jobs are failed.
++ false
